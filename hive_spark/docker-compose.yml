version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    volumes:
      - ./demo/demo.py:/demo.py

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - "8088:8088"
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    ports:
      - "8042:8042"
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  # historyserver:
  #   image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
  #   container_name: historyserver
  #   restart: always
  #   ports:
  #     - "8188:8188"
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
  #   volumes:
  #     - hadoop_historyserver:/hadoop/yarn/timeline
  #   env_file:
  #     - ./hadoop.env

  # presto-coordinator:
  #   image: shawnzhu/prestodb:0.181
  #   container_name: presto-coordinator
  #   ports:
  #     - "8089:8089"

  # spark-master:
  #   image: bde2020/spark-master:3.0.0-hadoop3.2
  #   container_name: spark-master
  #   depends_on:
  #     - namenode
  #     - datanode
  #   ports:
  #     - "8080:8080"
  #     - "7077:7077"
  #   volumes:
  #     - ./conf/hive-site.xml:/spark/conf/hive-site.xml:ro
  #     - ./conf/hosts:/etc/hosts
  #   environment:
  #     - SPARK_HOME=/spark
  #     - INIT_DAEMON_STEP=setup_spark
  #     - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  # spark-worker-1:
  #   image: bde2020/spark-worker:3.0.0-hadoop3.2
  #   container_name: spark-worker-1
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081:8081"
  #     - "18081:18081"
  #   volumes:
  #     - ./conf/hive-site.xml:/spark/conf/hive-site.xml:ro
  #     - ./conf/spark-env.sh:/spark/conf/spark-env.sh:ro
  #     - ./conf/hosts:/etc/hosts
  #     - ./demo/demo.py:/demo.py
  #   environment:
  #     - SPARK_HOME=/spark
  #     - SPARK_MASTER=spark://spark-master:7077
  #     - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  # spark-master:
  #   image: bitnami/spark
  #   container_name: spark-master
  #   environment:
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #   ports:
  #     - '8080:8080'
  #   volumes:
  #     - ./conf/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml:ro
  #     - ./demo/demo.py:/demo.py
  # spark-worker:
  #   image: bitnami/spark
  #   container_name: spark-worker-1
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081:8081"
  #   volumes:
  #     - ./conf/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml:ro
  #     - ./demo/demo.py:/demo.py
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #     - SPARK_WORKER_MEMORY=1G
  #     - SPARK_WORKER_CORES=1
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no

  spark-master:
    container_name: spark-master
    image: docker.io/onlyyounotothers/cluster-apache-spark:3.4.0
    ports:
      - "18080:18080"
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./conf/hive-site.xml:/opt/spark/conf/hive-site.xml:ro
      - ./conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
      - ./conf/start-spark.sh:/start-spark.sh:ro
      - ./demo/demo.py:/demo.py
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
      - PATH=${PATH}:/opt/spark/bin
  # spark-worker-1:
  #   container_name: spark-worker-1
  #   image: docker.io/onlyyounotothers/cluster-apache-spark:3.0.2
  #   ports:
  #     - "8081:8080"
  #     - "7000:7000"
  #   depends_on:
  #     - spark-master
  #   environment:
  #     - SPARK_MASTER=spark://spark-master:7077
  #     - SPARK_WORKER_CORES=1
  #     - SPARK_WORKER_MEMORY=1G
  #     - SPARK_DRIVER_MEMORY=1G
  #     - SPARK_EXECUTOR_MEMORY=1G
  #     - SPARK_WORKLOAD=worker
  #     - SPARK_LOCAL_IP=spark-worker-1
  #   volumes:
  #     - ./conf/hive-site.xml:/opt/spark/conf/hive-site.xml:ro
  #     - ./demo/demo.py:/demo.py
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

